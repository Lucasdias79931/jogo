/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jogo;



import java.util.ArrayList;
import java.util.Collections;


import javax.swing.JOptionPane;

/**
 *
 * @author Fabricio
 */
public class jogo extends javax.swing.JFrame {
      
        String[] test=new String[15];
        int jogada=0;
        String aux="";
        
        int vitoria;
        
    /**
     * Creates new form jogo
     */
    public jogo() {
        initComponents();
        
        ArrayList<String> lista = new ArrayList();
        for(int j=0;j<14;j++){
            lista.add(String.valueOf(j+1));
        }
        Collections.shuffle(lista);
         for(int i=0;i<14;i++){
             test[i]=lista.get(i);
         }
         
        /*
        for(int i=0;i<14;i++){
            test[i]=String.valueOf(i+1);
        }
       */
        
       

//atribuir os valores de test nos botÃµes correspondentes
        
       bt1.setText(test[0]);
       bt2.setText(test[1]);
       bt3.setText(test[2]);
       bt4.setText(test[3]);
       bt5.setText(test[4]);
       bt6.setText(test[5]);
       bt7.setText(test[6]);
       bt8.setText(test[7]);
       bt9.setText(test[8]);
       bt10.setText(test[9]);
       bt11.setText(test[10]);
       bt12.setText(test[11]);
       bt13.setText(test[12]);
       bt14.setText(test[13]);
       bt15.setText("");
       
         
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bt1 = new javax.swing.JButton();
        bt15 = new javax.swing.JButton();
        bt4 = new javax.swing.JButton();
        bt5 = new javax.swing.JButton();
        bt3 = new javax.swing.JButton();
        bt7 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt6 = new javax.swing.JButton();
        bt8 = new javax.swing.JButton();
        bt10 = new javax.swing.JButton();
        bt11 = new javax.swing.JButton();
        bt12 = new javax.swing.JButton();
        bt13 = new javax.swing.JButton();
        bt9 = new javax.swing.JButton();
        bt14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });

        bt15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt15ActionPerformed(evt);
            }
        });

        bt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt4ActionPerformed(evt);
            }
        });

        bt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt5ActionPerformed(evt);
            }
        });

        bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt3ActionPerformed(evt);
            }
        });

        bt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt7ActionPerformed(evt);
            }
        });

        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });

        bt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt6ActionPerformed(evt);
            }
        });

        bt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt8ActionPerformed(evt);
            }
        });

        bt10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt10ActionPerformed(evt);
            }
        });

        bt11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt11ActionPerformed(evt);
            }
        });

        bt12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt12ActionPerformed(evt);
            }
        });

        bt13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt13ActionPerformed(evt);
            }
        });

        bt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt9ActionPerformed(evt);
            }
        });

        bt14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(309, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
            // TODO add your handling code here:
            
     if((bt2.getText().equals("")||bt6.getText().equals(""))){
      
         int verifica=0;  
         
                aux = bt1.getText();
                bt1.setText("");
                test[0]="";
                if(bt2.getText().equals("")){
                      
                      bt2.setText(aux);
                      test[1]=aux;
                      
                      
                }else if(bt6.getText().equals("")){
                    
                    bt6.setText(aux);
                    test[5]=aux;
                }
                
                jogada++;
                
                
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
                if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       }       //
            
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt13ActionPerformed
        // TODO add your handling code here:
       if((bt8.getText().equals("")||bt12.getText().equals("")||bt14.getText().equals(""))){
           
            int verifica=0;
          
                aux=bt13.getText();
                bt13.setText("");
            
                if(bt12.getText().equals("")){
                      
                      bt12.setText(aux);
                      test[11]=aux;
                      
                       
                      
                }else if(bt14.getText().equals("")){
                    
                    bt14.setText(aux);
                    test[13]=aux;
                }else if(bt8.getText().equals("")){
                     
                    bt8.setText(aux);
                     test[7]=aux;
                }
                test[12]="";
                
                jogada++;
                
             
              
             
            
                
                
                
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       }       // TODO 
    
    }//GEN-LAST:event_bt13ActionPerformed

    private void bt15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt15ActionPerformed
    
     if((bt14.getText().equals("")||bt10.getText().equals(""))){
            int cont=0;
            int verifica=0;
          
                aux=bt15.getText();
                
               
                bt15.setText("");
            
                if(bt10.getText().equals("")){
                      
                      bt10.setText(aux);
                      test[9]=aux;
                      
                       
                      
                }else if(bt14.getText().equals("")){
                    
                    bt14.setText(aux);
                    test[13]=aux;
                }
                test[14]="";
                
                jogada++;
                
              
              
              
             
            
                
                
               
             
            
                
                
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
             if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                     
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
                
            
            
            
          
       }       //     // TODO add your handling code here:
    }//GEN-LAST:event_bt15ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        // TODO add your handling code here:
        if((bt1.getText().equals("")||bt7.getText().equals("")||bt3.getText().equals(""))){
          
            int verifica=0;
          
                aux=bt2.getText();
                bt2.setText("");
            
                if(bt1.getText().equals("")){
                      
                      bt1.setText(aux);
                      test[0]=aux;
                      
                       
                      
                }else if(bt7.getText().equals("")){
                    
                    bt7.setText(aux);
                    test[6]=aux;
                }else if(bt3.getText().equals("")){
                     
                    bt3.setText(aux);
                     test[2]=aux;
                }
                test[1]="";
                
                jogada++;
                
                
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
                if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
          
       }       //
    }//GEN-LAST:event_bt2ActionPerformed

    private void bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt3ActionPerformed
        // TODO add your handling code here:
         if((bt2.getText().equals("")||bt8.getText().equals("")||bt4.getText().equals(""))){
            
            int verifica=0;
          
                aux=bt3.getText();
                bt3.setText("");
            
                if(bt2.getText().equals("")){
                      
                      bt2.setText(aux);
                      test[1]=aux;
                      
                       
                      
                }else if(bt8.getText().equals("")){
                    
                    bt8.setText(aux);
                    test[7]=aux;
                }else if(bt4.getText().equals("")){
                     
                    bt4.setText(aux);
                     test[3]=aux;
                }
                test[2]="";
                jogada++;
                
               
              
             
            
                
                
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       }     
    }//GEN-LAST:event_bt3ActionPerformed

    private void bt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt6ActionPerformed
      if((bt1.getText().equals("")||bt7.getText().equals("")||bt11.getText().equals(""))){
          
            int verifica=0;
          
                aux=bt6.getText();
                bt6.setText("");
            
                if(bt1.getText().equals("")){
                      
                      bt1.setText(aux);
                      test[0]=aux;
                      
                       
                      
                }else if(bt7.getText().equals("")){
                    
                    bt7.setText(aux);
                    test[6]=aux;
                }else if(bt11.getText().equals("")){
                     
                    bt11.setText(aux);
                     test[10]=aux;
                }
                test[5]="";
                
                jogada++;
                
              
            
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       }       //
    }//GEN-LAST:event_bt6ActionPerformed

    private void bt11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt11ActionPerformed
        // TODO add your handling code here:
        if((bt6.getText().equals("")||bt12.getText().equals(""))){
          
            int verifica=0;
          
                aux=bt11.getText();
                bt11.setText("");
            
                if(bt12.getText().equals("")){
                    
                    bt12.setText(aux);
                    test[11]=aux;
                }else if(bt6.getText().equals("")){
                     
                    bt6.setText(aux);
                     test[5]=aux;
                }
                test[10]="";
                
                jogada++;
                
            
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
          
       }       //
    }//GEN-LAST:event_bt11ActionPerformed

    private void bt12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt12ActionPerformed
        // TODO add your handling code here:
        if((bt11.getText().equals("")||bt7.getText().equals("")||bt13.getText().equals(""))){
           
            int verifica=0;
          
                aux=bt12.getText();
                bt12.setText("");
            
                if(bt13.getText().equals("")){
                      
                      bt13.setText(aux);
                      test[12]=aux;
                      
                       
                      
                }else if(bt7.getText().equals("")){
                    
                    bt7.setText(aux);
                    test[6]=aux;
                }else if(bt11.getText().equals("")){
                     
                    bt11.setText(aux);
                     test[10]=aux;
                }
                test[11]="";
                
                jogada++;
                
               
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
             if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       } 
    }//GEN-LAST:event_bt12ActionPerformed

    private void bt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt7ActionPerformed
        // TODO add your handling code here:
        if((bt6.getText().equals("")||bt12.getText().equals("")||bt8.getText().equals("")||bt2.getText().equals(""))){
           
            int verifica=0;
          
                aux=bt7.getText();
                bt7.setText("");
            
                if(bt2.getText().equals("")){
                      
                      bt2.setText(aux);
                      test[1]=aux;
                      
                       
                      
                }else if(bt8.getText().equals("")){
                    
                    bt8.setText(aux);
                    test[7]=aux;
                }else if(bt12.getText().equals("")){
                     
                    bt12.setText(aux);
                     test[11]=aux;
                }else if(bt6.getText().equals("")){
                     
                    bt6.setText(aux);
                     test[5]=aux;
                }
                test[6]="";
                jogada++;
                
                
               
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       } 
    }//GEN-LAST:event_bt7ActionPerformed

    private void bt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt8ActionPerformed
        if((bt7.getText().equals("")||bt3.getText().equals("")||bt13.getText().equals("")||bt9.getText().equals(""))){
            
            int verifica=0;
          
                aux=bt8.getText();
                bt8.setText("");
            
                if(bt7.getText().equals("")){
                      
                      bt7.setText(aux);
                      test[6]=aux;
                      
                       
                      
                }else if(bt3.getText().equals("")){
                    
                    bt3.setText(aux);
                    test[2]=aux;
                }else if(bt13.getText().equals("")){
                     
                    bt13.setText(aux);
                     test[12]=aux;
                }else if(bt9.getText().equals("")){
                     
                    bt9.setText(aux);
                     test[8]=aux;
                }
                test[7]="";
                jogada++;
                
                
              
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       } 
    }//GEN-LAST:event_bt8ActionPerformed

    private void bt14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt14ActionPerformed
        // TODO add your handling code here:
        if((bt13.getText().equals("")||bt15.getText().equals("")||bt9.getText().equals(""))){
           
            int verifica=0;
          
                aux=bt14.getText();
                bt14.setText("");
            
                if(bt13.getText().equals("")){
                      
                      bt13.setText(aux);
                      test[12]=aux;
                      
                       
                      
                }else if(bt9.getText().equals("")){
                    
                    bt9.setText(aux);
                    test[8]=aux;
                }else if(bt15.getText().equals("")){
                     
                    bt15.setText(aux);
                     test[14]=aux;
                }
                test[13]="";
                jogada++;
                
                
               
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
              if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                    JOptionPane.showMessageDialog(null,verifica,"",1);
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
          
       }  
    }//GEN-LAST:event_bt14ActionPerformed

    private void bt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt9ActionPerformed
        // TODO add your handling code here:
         if((bt10.getText().equals("")||bt14.getText().equals("")||bt4.getText().equals("")||bt8.getText().equals(""))){
          
            int verifica=0;
          
                aux=bt9.getText();
                bt9.setText("");
            
                if(bt4.getText().equals("")){
                      
                      bt4.setText(aux);
                      test[3]=aux;
                      
                       
                      
                }else if(bt8.getText().equals("")){
                    
                    bt8.setText(aux);
                    test[7]=aux;
                }else if(bt14.getText().equals("")){
                     
                    bt14.setText(aux);
                     test[13]=aux;
                }else if(bt10.getText().equals("")){
                     
                    bt10.setText(aux);
                     test[10]=aux;
                }
                test[9]="";
                
                jogada++;
                
                
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
                if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       } 
    }//GEN-LAST:event_bt9ActionPerformed

    private void bt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt4ActionPerformed
        // TODO add your handling code here:
             if((bt3.getText().equals("")||bt9.getText().equals("")||bt5.getText().equals(""))){
           
            int verifica=0;
          
                aux=bt4.getText();
                bt4.setText("");
            
                if(bt3.getText().equals("")){
                      
                      bt3.setText(aux);
                      test[2]=aux;
                      
                       
                      
                }else if(bt9.getText().equals("")){
                    
                    bt9.setText(aux);
                    test[7]=aux;
                }else if(bt5.getText().equals("")){
                     
                    bt5.setText(aux);
                     test[4]=aux;
                }
                test[3]="";
                jogada++;
                
                
                
            
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
                if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       } 
    }//GEN-LAST:event_bt4ActionPerformed

    private void bt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt5ActionPerformed
        // TODO add your handling code here:
        if((bt4.getText().equals("")||bt10.getText().equals(""))){
       
         int verifica=0;  
         
                aux=bt5.getText();
                bt5.setText("");
                test[4]="";
                if(bt4.getText().equals("")){
                      
                      bt4.setText(aux);
                      test[3]=aux;
                      
                      
                }else if(bt10.getText().equals("")){
                    
                    bt10.setText(aux);
                    test[9]=aux;
                }
                
                jogada++;
                
             
             
            
                
                
              
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
                if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                         if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
          
       }       //
    }//GEN-LAST:event_bt5ActionPerformed

    private void bt10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt10ActionPerformed
        // TODO add your handling code here:
      if((bt9.getText().equals("")||bt5.getText().equals("")||bt15.getText().equals(""))){
           
            int verifica=0;
          
                aux=bt10.getText();
                bt10.setText("");
            
                if(bt5.getText().equals("")){
                      
                      bt5.setText(aux);
                      test[4]=aux;
                      
                       
                      
                }else if(bt9.getText().equals("")){
                    
                    bt9.setText(aux);
                    test[8]=aux;
                }else if(bt15.getText().equals("")){
                     
                    bt15.setText(aux);
                     test[14]=aux;
                }
                test[9]="";
                
                jogada++;
                
               
                //verifica se os blocos de 1 a 15 estÃ£o em ordem crescente
               if(jogada>=15){
                    for(int i=0;i<13;i++){
                        
                        if((!(test[i].equals("")))&&(!(test[i+1].equals("")))){
                            if((test[i].compareTo(test[i+1]))<0){
                            verifica++;
                        }
                        }
                    }
                }
                
                if(verifica==12){
         
                     vitoria=JOptionPane.showConfirmDialog(null,"\tVitÃ³ria\nTentativas: "+jogada+"\nSim para reiniciar\nNO para Finalizar","",0);
                     
                }
            
            
            
          
       }       //
           
        
    }//GEN-LAST:event_bt10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jogo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt10;
    private javax.swing.JButton bt11;
    private javax.swing.JButton bt12;
    private javax.swing.JButton bt13;
    private javax.swing.JButton bt14;
    private javax.swing.JButton bt15;
    private javax.swing.JButton bt2;
    private javax.swing.JButton bt3;
    private javax.swing.JButton bt4;
    private javax.swing.JButton bt5;
    private javax.swing.JButton bt6;
    private javax.swing.JButton bt7;
    private javax.swing.JButton bt8;
    private javax.swing.JButton bt9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
